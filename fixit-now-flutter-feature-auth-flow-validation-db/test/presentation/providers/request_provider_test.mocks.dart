// Mocks generated by Mockito 5.4.6 from annotations
// in fixit_now/test/presentation/providers/request_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fixit_now/core/models/request.dart' as _i2;
import 'package:fixit_now/core/services/request_service.dart' as _i3;
import 'package:fixit_now/core/services/token_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRequest_0 extends _i1.SmartFake implements _i2.Request {
  _FakeRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RequestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestService extends _i1.Mock implements _i3.RequestService {
  MockRequestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i5.Future<_i2.Request> createRequest({
    required String? serviceType,
    required String? description,
    required String? urgency,
    required double? budget,
    DateTime? scheduledDate,
    int? serviceId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRequest,
          [],
          {
            #serviceType: serviceType,
            #description: description,
            #urgency: urgency,
            #budget: budget,
            #scheduledDate: scheduledDate,
            #serviceId: serviceId,
          },
        ),
        returnValue: _i5.Future<_i2.Request>.value(_FakeRequest_0(
          this,
          Invocation.method(
            #createRequest,
            [],
            {
              #serviceType: serviceType,
              #description: description,
              #urgency: urgency,
              #budget: budget,
              #scheduledDate: scheduledDate,
              #serviceId: serviceId,
            },
          ),
        )),
      ) as _i5.Future<_i2.Request>);

  @override
  _i5.Future<List<_i2.Request>> getMyRequests() => (super.noSuchMethod(
        Invocation.method(
          #getMyRequests,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Request>>.value(<_i2.Request>[]),
      ) as _i5.Future<List<_i2.Request>>);

  @override
  _i5.Future<_i2.Request> updateRequestStatus(
    int? requestId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRequestStatus,
          [
            requestId,
            status,
          ],
        ),
        returnValue: _i5.Future<_i2.Request>.value(_FakeRequest_0(
          this,
          Invocation.method(
            #updateRequestStatus,
            [
              requestId,
              status,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Request>);

  @override
  _i5.Future<_i2.Request> addReview({
    required int? requestId,
    required double? rating,
    required String? review,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [],
          {
            #requestId: requestId,
            #rating: rating,
            #review: review,
          },
        ),
        returnValue: _i5.Future<_i2.Request>.value(_FakeRequest_0(
          this,
          Invocation.method(
            #addReview,
            [],
            {
              #requestId: requestId,
              #rating: rating,
              #review: review,
            },
          ),
        )),
      ) as _i5.Future<_i2.Request>);

  @override
  _i5.Future<List<_i2.Request>> getAllRequests(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllRequests,
          [token],
        ),
        returnValue: _i5.Future<List<_i2.Request>>.value(<_i2.Request>[]),
      ) as _i5.Future<List<_i2.Request>>);

  @override
  _i5.Future<List<_i2.Request>> getCompletedRequests(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletedRequests,
          [token],
        ),
        returnValue: _i5.Future<List<_i2.Request>>.value(<_i2.Request>[]),
      ) as _i5.Future<List<_i2.Request>>);

  @override
  _i5.Future<List<_i2.Request>> getRejectedRequests(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRejectedRequests,
          [token],
        ),
        returnValue: _i5.Future<List<_i2.Request>>.value(<_i2.Request>[]),
      ) as _i5.Future<List<_i2.Request>>);
}

/// A class which mocks [TokenService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenService extends _i1.Mock implements _i6.TokenService {
  MockTokenService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> hasToken() => (super.noSuchMethod(
        Invocation.method(
          #hasToken,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
